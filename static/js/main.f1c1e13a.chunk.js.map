{"version":3,"sources":["components/Commons/Preloader/Preloader.js","components/Commons/Menu/Menu.js","components/Content/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Preloader","className","defaultProps","Menu","Home","target","href","rel","id","style","backgroundImage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yRAGMA,G,gBAAY,kBAChB,yBAAKC,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,0BAUrCD,EAAUE,aAAe,GAEVF,QCnBTG,G,MAAO,kBACX,yBAAKF,UAAU,QAEX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,eAWhCE,EAAKD,aAAe,GAELC,QCiEAC,EAlFF,kBACX,yBAAKH,UAAU,QACX,kBAAC,EAAD,MAEA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBACf,4BAAQA,UAAU,UACd,yBAAKA,UAAU,YACX,yBAAKA,UAAU,yBACX,uBAAGI,OAAO,SAASC,KAAK,qDAAqDC,IAAI,uBAC7E,0BAAMN,UAAU,YAAhB,UAAkC,2CAClC,0BAAMA,UAAU,2BAAhB,YAAmD,yCAG3D,kBAAC,EAAD,QAIR,yBAAKA,UAAU,WAEX,yBAAKA,UAAU,2BAA2BO,GAAG,mBAEzC,yBAAKP,UAAU,YACX,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,mBAAmBO,GAAG,uBAGzC,yBAAKP,UAAU,uBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OAAOQ,MAAO,CAACC,gBAAiB,2BAC/C,wBAAIT,UAAU,WAAd,mBACe,iDADf,4BACsE,6BADtE,aAEc,wCAFd,aAEwC,8CAFxC,IAE+D,6BAF/D,iBAGkB,qCAHlB,aAKA,yBAAKA,UAAU,8BACX,0CAAe,yCACf,wCAAa,gDACb,qCAAU,6CAEd,0BAAMA,UAAU,wBAQpC,4BAAQA,UAAU,UACd,yBAAKA,UAAU,QACX,yDACA,iDAEJ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,gBAAf,aACA,yBAAKA,UAAU,OACX,uBAAGI,OAAO,SAASC,KAAK,kCAAkCC,IAAI,uBAC1D,0BAAMN,UAAU,4BAEpB,uBAAGI,OAAO,SAASC,KAAK,qDAAqDC,IAAI,uBAC7E,0BAAMN,UAAU,6BAEpB,uBAAGI,OAAO,SAASC,KAAK,qEAAqEC,IAAI,uBAC7F,0BAAMN,UAAU,4BAI5B,yBAAKA,UAAU,WAGnB,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,iBCnEdU,MARf,WACE,OACE,yBAAKV,UAAU,OACb,kBAAC,EAAD,QCGcW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f1c1e13a.chunk.js","sourcesContent":["import React from 'react';\nimport './Preloader.scss';\n\nconst Preloader = () => (\n  <div className=\"Preloader\">\n      <div className=\"preloader\">\n          <div className=\"centrize full-width\">\n              <div className=\"vertical-center\">\n                  <div className=\"spinner\">\n                      <div className=\"double-bounce1\"/>\n                      <div className=\"double-bounce2\"/>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n);\n\nPreloader.propTypes = {};\n\nPreloader.defaultProps = {};\n\nexport default Preloader;\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = () => (\n  <div className=\"Menu\">\n\n      <div className=\"top-menu hover-masks\">\n          <div className=\"top-menu-nav\">\n              <div className=\"menu-topmenu-container\">\n                  <ul className=\"menu\">\n\n                  </ul>\n              </div>\n          </div>\n      </div>\n  </div>\n);\n\nMenu.propTypes = {};\n\nMenu.defaultProps = {};\n\nexport default Menu;\n","import React from 'react';\nimport './Home.scss';\nimport Preloader from \"../../Commons/Preloader/Preloader\";\nimport Menu from \"../../Commons/Menu/Menu\";\n\nconst Home = () => (\n  <div className=\"Home\">\n      <Preloader/>\n\n      <div className=\"container\">\n          <div className=\"cursor-follower\"/>\n          <header className=\"header\">\n              <div className=\"head-top\">\n                  <div className=\"logo hover-masks-logo\">\n                      <a target=\"_blank\" href=\"https://www.linkedin.com/in/victorcastrocontreras/\" rel=\"noopener noreferrer\">\n                          <span className=\"mask-lnk\">Victor <strong>Castro</strong></span>\n                          <span className=\"mask-lnk mask-lnk-hover\">Download <strong>CV</strong></span>\n                      </a>\n                  </div>\n                  <Menu/>\n              </div>\n          </header>\n\n          <div className=\"wrapper\">\n\n              <div className=\"section started personal\" id=\"section-started\">\n\n                  <div className=\"video-bg\">\n                      <div className=\"video-bg-mask\"/>\n                      <div className=\"video-bg-texture\" id=\"grained_container\"/>\n                  </div>\n\n                  <div className=\"centrize full-width\">\n                      <div className=\"vertical-center\">\n                          <div className=\"started-content\">\n                              <div className=\"logo\" style={{backgroundImage: 'url(images/me-bw.jpg)'}}/>\n                              <h1 className=\"h-title\">\n                                  Hello, Iâ€™m <strong>Victor Castro</strong>, Full Stack Programmer. <br />\n                                  Front-end <b>Developer</b> Based in <b>iOS and Flutter</b>.<br />\n                                  Back-end with <b>NodeJS</b> and PHP.\n                              </h1>\n                              <div className=\"h-subtitle typing-subtitle\">\n                                  <p>I Breathing <strong>code</strong></p>\n                                  <p>I develop <strong>mobile apps</strong></p>\n                                  <p>I love <strong>SwiftUI</strong></p>\n                              </div>\n                              <span className=\"typed-subtitle\"/>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n\n          </div>\n\n          <footer className=\"footer\">\n              <div className=\"copy\">\n                  <p>victorcastro.io@icloud.com</p>\n                  <p>(+51) 902 003 434</p>\n              </div>\n              <div className=\"soc-box\">\n                  <div className=\"follow-label\">Follow Me</div>\n                  <div className=\"soc\">\n                      <a target=\"_blank\" href=\"https://github.com/victorcastro\" rel=\"noopener noreferrer\">\n                          <span className=\"icon fab fa-github-alt\"/>\n                      </a>\n                      <a target=\"_blank\" href=\"https://www.linkedin.com/in/victorcastrocontreras/\" rel=\"noopener noreferrer\">\n                          <span className=\"icon fab fa-linkedin-in\"/>\n                      </a>\n                      <a target=\"_blank\" href=\"https://api.whatsapp.com/send?phone=51961509467&text=Hola%20soy%20\" rel=\"noopener noreferrer\">\n                          <span className=\"icon fab fa-whatsapp\"/>\n                      </a>\n                  </div>\n              </div>\n              <div className=\"clear\"/>\n          </footer>\n\n          <div className=\"lines\">\n              <div className=\"line-col\"/>\n              <div className=\"line-col\"/>\n              <div className=\"line-col\"/>\n              <div className=\"line-col\"/>\n              <div className=\"line-col\"/>\n          </div>\n      </div>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport './resources/scss/app.scss'\n//import 'bootstrap/dist/css/bootstrap.css'\n\nimport Home from './components/Content/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}